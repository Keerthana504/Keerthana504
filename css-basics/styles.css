body {
  margin: 0;
  font-family: sans-serif;
  background: #f5f6f7;
}

.canvas {
  width: 500px;
  height: 600px;
  background-color: #4d0f00;
  overflow: hidden;
  /* Padding and border values get added to the total width, so the element grows to accommodate these values */
  /* hide or clip content that overflows the bounding box of an element. */
  /* apply a blur effect to an element, making its content appear blurry. */
  filter: blur(2px);
}

.frame {
  border: 50px solid black;
  width: 500px;
  padding: 50px;
  margin: 20px auto;
}

.one {
  width: 425px;
  height: 150px;
  background-color: #efb762;
  margin: 20px auto;
  /* 0 for the horizontal offset of the shadow. , 0 for the vertical offset of the shadow. 3px for the blur radius of the shadow.
    3px for the spread radius of the shadow , #efb762 for the color of the shadow. */
  box-shadow: 0 0 3px 3px #efb762;
  border-radius: 9px;
  transform: rotate(-0.6deg);
}

.two {
  width: 475px;
  height: 200px;
  background-color: #8f0401;
  margin: 0 auto 20px;
  box-shadow: 0 0 3px 3px #8f0401;
  border-radius: 8px 10px;
  transform: rotate(0.4deg);
}

.one,
.two {
  filter: blur(1px);
}

.three {
  width: 91%;
  height: 28%;
  background-color: #b20403;
  margin: auto;
  filter: blur(2px);
  box-shadow: 0 0 5px 5px #b20403;
  border-radius: 30px 25px 60px 12px;
}

.frame-one {
  box-sizing: border-box;
  /* The border-box sizing model does the opposite of content-box. The total width of the element, including padding and border, 
  will be the explicit width set.The content of the element will shrink to make room for the padding and border. */
}

.header {
  text-align: center;
  text-transform: uppercase;
  padding: 32px;
  background-color: #0a0a23;
  color: #fff;
  border-bottom: 4px solid #fdb347;
}

.gallery {
  display: flex;
  flex-direction: row;
  /* The flex-wrap property determines how your flex items behave when the flex container is too small. 
Setting it to wrap will allow the items to wrap to the next row or column. 
nowrap (default) will prevent your items from wrapping and shrink them if needed. */
  flex-wrap: wrap;
  /* The justify-content property determines how the items inside a flex container are positioned along the main axis, 
affecting their position and the space around them. */
  justify-content: center;
  align-items: center;
  gap: 16px;
  max-width: 1400px;
  margin: 0 auto;
  padding: 20px 10px;
}

.gallery img {
  width: 100%;
  max-width: 350px;
  height: 300px;
  /* This property is set to cover, indicating that the image should be scaled to cover the entire content box while maintaining its aspect ratio. 
  The image will be cropped, if necessary, to fit within the box. */
  object-fit: cover;
  border-radius: 10px;
}

.gallery::after {
  content: "";
  width: 350px;
}

* {
  box-sizing: border-box;
}

html {
  font-size: 16px;
}

body {
  font-family: "Open Sans", sans-serif;
}

.label {
  border: 2px solid black;
  width: 270px;
  margin: 20px auto;
  padding: 0 7px;
}

header h1 {
  text-align: center;
  margin: -4px 0;
  letter-spacing: 0.15px;
}

p {
  margin: 0;
  display: flex;
  justify-content: space-between;
}

.divider {
  border-bottom: 1px solid #888989;
  margin: 2px 0;
}

.bold {
  font-weight: 800;
}

.large {
  height: 10px;
}

.large,
.medium {
  background-color: black;
  border: 0;
}

.medium {
  height: 5px;
}

.small-text {
  font-size: 0.85rem;
}

.calories-info {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}

.calories-info h2 {
  margin: 0;
}

.left-container p {
  margin: -5px -2px;
  font-size: 2em;
  font-weight: 700;
}

.calories-info span {
  margin: -7px -2px;
  font-size: 2.4em;
  font-weight: 700;
}

.right {
  justify-content: flex-end;
}

.indent {
  margin-left: 1em;
}

.double-indent {
  margin-left: 2em;
}

.daily-value p:not(.no-divider) {
  border-bottom: 1px solid #888989;
}

.note {
  font-size: 0.6rem;
  margin: 5px 0;
  padding: 0px 8px;
  text-indent: -8px;
}
